version: 2.1
# we define executors in advance using parameters, to make it easier to
# reference in subsequent phases the branch-tagged corerunner images that get
# built, and avoid boilerplate in each step.
# https://circleci.com/docs/2.0/reusing-config/#authoring-reusable-executors
executors:
  dockerbuilder:
    docker:
      - image: docker:stable
    resource_class: medium # default & only option while on free plan
    environment:
      # Customize the JVM maximum heap limit
      # default environment size without paying on circle-ci is 4gb:
      # https://circleci.com/docs/2.0/configuration-reference/#resource_class
      JVM_OPTS: -Xmx3200m
      # Enable BuildKit so we can pretend it's the future!
      # Unfortunately this wrecks havoc with layer cache export method for now
      # DOCKER_BUILDKIT: 1
  
  corerunner:
    resource_class: medium # default & only option while on free plan
    docker:
      - image: openlaw/core:buildcache-circle-<< parameters.branchname >>
    working_directory: /src
    parameters:
      branchname:
        type: string
        default: ${CIRCLE_BRANCH:-$CIRCLE_TAG}

jobs:
  build:
    executor: dockerbuilder
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: login to Docker Hub
          command: echo "$DOCKER_PASS" | docker login --username "$DOCKER_USER" --password-stdin
      - run: BRANCH=${CIRCLE_BRANCH:-$CIRCLE_TAG} ID=circle PUSH_CACHE=1 ./ci/build.sh
  
  test:
    executor: corerunner
    steps:
      - run: sbt "project openlawCore" test

  coverage:
    executor: corerunner
    environment:
      - UPLOAD_RESULTS: "0"
    steps:
      - run: ./scripts/coverage_report.sh

  # for release step, we need a .git directory, so do a local checkout.
  # circleci prevents us from doing a checkout in a non-empty directory,
  # so we need to override the WORKDIR of the container such that their
  # built-in checkout will function, and then manually copy our files
  # to where we need em.
  release:
    executor: corerunner
    environment:
      - RELEASE_TRIGGER: "false"
    working_directory: /tmp/git-clone
    steps:
      - checkout
      - run: cp -r .git /src/.git
      - run: cd /src && ./scripts/release.sh

workflows:
  version: 2.1
  build-test-release:
    jobs:
      - build:
          context: DockerHubCredentials
          filters:  # required since `test` has tag filters AND requires `build`
            tags:
              only: /.*/
      - test:
          requires:
            - build
          filters:  # required since `deploy` has tag filters AND requires `test`
            tags:
              only: /.*/
      - coverage:
          context: CodacyCredentials
          requires:
            - build
          filters:  # required since ???
            tags:
              only: /.*/
      - release:
          context: BintrayCredentials
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          # sadly circle-ci only supports boolean ORs for multiple filters,
          # leading to this complex logic and preventing us from being to check
          # to verify only on `master` branch.
          # https://discuss.circleci.com/t/how-to-deploy-only-on-tagged-and-master-commits/25581
